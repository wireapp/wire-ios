//
// Wire
// Copyright (C) 2024 Wire Swiss GmbH
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see http://www.gnu.org/licenses/.
//

#include "warnings.xcconfig"
#include "../version.xcconfig"

// Architectures
//
SDKROOT = iphoneos
ARCHS[sdk=iphoneos*] = arm64
ARCHS[sdk=iphonesimulator*] = x86_64
VALID_ARCHS[sdk=iphoneos*] = arm64
SUPPORTED_PLATFORMS = iphoneos iphonesimulator

// Code Signing
//
CODE_SIGN_IDENTITY[sdk=iphoneos*] = iPhone Developer

// Deployment
//
IPHONEOS_DEPLOYMENT_TARGET = 15.0
TARGETED_DEVICE_FAMILY = 1,2

DYLIB_INSTALL_NAME_BASE = @rpath
FRAMEWORK_VERSION = A

// Linking
//
OTHER_LDFLAGS = -ObjC
CARTHAGE_FOLDER[sdk=iphoneos*] = $(PROJECT_DIR)/../Carthage/Build
CARTHAGE_FOLDER[sdk=iphonesimulator*] = $(PROJECT_DIR)/../Carthage/Build
FRAMEWORK_SEARCH_PATHS = $(inherited) $(CARTHAGE_FOLDER) $(PLATFORM_DIR)/Developer/Library/Frameworks
DYLIB_COMPATIBILITY_VERSION = $(MAJOR_VERSION).0
DYLIB_CURRENT_VERSION = $(CURRENT_PROJECT_VERSION)

// Swift
//
SWIFT_VERSION = 5.1
ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = NO
SWIFT_COMPILATION_MODE = wholemodule
LD_RUNPATH_SEARCH_PATHS = $(inherited) @loader_path/Frameworks @loader_path/../Frameworks @executable_path/Frameworks @executable_path/../Frameworks
DEFINES_MODULE = YES

// Search Paths
//
ALWAYS_SEARCH_USER_PATHS = NO

// Deployment
//
COMBINE_HIDPI_IMAGES = YES
ENABLE_BITCODE = NO

// Versioning
//
VERSIONING_SYSTEM = apple-generic

// LLVM - Code Generation
//
GCC_DYNAMIC_NO_PIC = NO

// LLVM - Language
//
GCC_C_LANGUAGE_STANDARD = gnu99

// LLVM - Language - C++
//
CLANG_CXX_LANGUAGE_STANDARD = gnu++0x
CLANG_CXX_LIBRARY = libc++
GCC_ENABLE_CPP_EXCEPTIONS = NO

// LLVM - Language - Modules
//
CLANG_ENABLE_MODULES = YES
CLANG_ALLOW_NON_MODULAR_INCLUDES_IN_FRAMEWORK_MODULES = YES

// LLVM - Language - Objective C
//
GCC_ENABLE_OBJC_EXCEPTIONS = YES
CLANG_ENABLE_OBJC_ARC = YES
ENABLE_STRICT_OBJC_MSGSEND = YES

// LLVM - Preprocessing
//
ENABLE_NS_ASSERTIONS = YES

// info.plist
INFOPLIST_PREPROCESS = YES
