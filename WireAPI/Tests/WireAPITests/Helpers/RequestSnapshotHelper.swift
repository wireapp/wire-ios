//
// Wire
// Copyright (C) 2024 Wire Swiss GmbH
//
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program. If not, see http://www.gnu.org/licenses/.
//

import SnapshotTesting
@testable import WireAPI
import XCTest

/// A helper object to make snapshotting API requests easier.

struct RequestSnapshotHelper<Builder: APIBuilder> {

    /// Snapshot test the request generated by the given block for
    /// all api versions.
    /// 
    /// This will generate one snapshot reference for each version.
    ///
    /// - Parameters:
    ///   - block: Some code that should invoke a method of the given api to generate a request.
    ///   - file: The file invoking the test.
    ///   - function: The method invoking the test.
    ///   - line: The line invoking the test.

    func verifyRequestForAllAPIVersions(
        when block: (Builder.API) async throws -> Void,
        file: StaticString = #file,
        function: String = #function,
        line: UInt = #line
    ) async throws {
        for apiVersion in APIVersion.allCases {
            try await verifyRequest(
                apiVersion: apiVersion,
                when: block,
                file: file,
                function: function,
                line: line
            )
        }
    }

    /// Snapshot test the request generated by the given block for a
    /// specific api version.
    ///
    /// Note: this is run on the main thread as a workaround of a crash in
    /// the SnapshotTesting framework when snapshotting in async environments.
    /// See https://github.com/pointfreeco/swift-snapshot-testing/issues/822
    ///
    /// - Parameters:
    ///   - apiVersion: API version to test.
    ///   - block: Some code that should invoke a method of the given api to generate a request.
    ///   - file: The file invoking the test.
    ///   - function: The method invoking the test.
    ///   - line: The line invoking the test.

    @MainActor
    func verifyRequest(
        apiVersion: APIVersion,
        when block: (Builder.API) async throws -> Void,
        file: StaticString = #file,
        function: String = #function,
        line: UInt = #line
    ) async throws {
        let httpClient = HTTPClientMock()
        let builder = Builder(httpClient: httpClient)
        let sut = builder.makeAPI(for: apiVersion)
        try? await block(sut)
        let request = try XCTUnwrap(httpClient.receivedRequest, "no request was generated")

        let errorMessage = verifySnapshot(
            of: request,
            as: .dump,
            named: "v\(apiVersion.rawValue)",
            file: file,
            testName: function,
            line: line
        )

        if let errorMessage {
            XCTFail(errorMessage, file: file, line: line)
        }
    }

}
