--exclude **/.build,**/Carthage,**/DerivedData,**.generated.swift,wire-ios-protos/Protos/**,**+Generated.swift,wire-ios/Templates/**,WireUI/Sources/WireDesign/Icons/Autogenerated/**

--rules \
    andOperator, \
    anyObjectProtocol, \
    applicationMain, \
    assertionFailures, \
    blankLineAfterImports, \
    blankLinesAroundMark, \
    blankLinesAtEndOfScope, \
    blankLinesAtStartOfScope, \
    blankLinesBetweenChainedFunctions, \
    blankLinesBetweenScopes, \
    braces, \
    conditionalAssignment, \
    consistentSwitchCaseSpacing, \
    duplicateImports, \
    elseOnSameLine, \
    emptyBraces, \
    enumNamespaces, \
    extensionAccessControl, \
    genericExtensions, \
    hoistAwait, \
    hoistPatternLet, \
    hoistTry, \
    indent, \
    initCoderUnavailable, \
    leadingDelimiters, \
    linebreakAtEndOfFile, \
    linebreaks, \
    modifierOrder, \
    numberFormatting, \
    opaqueGenericParameters, \
    preferForLoop, \
    preferKeyPath, \
    redundantBackticks, \
    redundantBreak, \
    redundantClosure, \
    redundantExtensionACL, \
    redundantFileprivate, \
    redundantGet, \
    redundantInit, \
    redundantInternal, \
    redundantLet, \
    redundantLetError, \
    redundantNilInit, \
    redundantObjc, \
    redundantOptionalBinding, \
    redundantParens, \
    redundantRawValues, \
    redundantReturn, \
    redundantSelf, \ # False positives in all cases using @autoclosure. `selfrequired` option below creates a `whitetlist` of methods
    redundantStaticSelf, \
    redundantType, \
    redundantTypedThrows, \
    redundantVoidReturnType, \
    semicolons, \
    sortDeclarations, \
    sortImports, \
    sortTypealiases, \
    spaceAroundBraces, \
    spaceAroundBrackets, \
    spaceAroundComments, \
    spaceAroundGenerics, \
    spaceAroundOperators, \
    spaceAroundParens, \
    spaceInsideBraces, \
    spaceInsideBrackets, \
    spaceInsideComments, \
    spaceInsideGenerics, \
    spaceInsideParens, \
    strongOutlets, \
    strongifiedSelf, \
    todos, \
    trailingClosures, \
    trailingCommas, \
    trailingSpace, \
    typeSugar, \
    unusedArguments, \
    void, \
    wrap, \
    wrapArguments, \
    wrapAttributes, \
    wrapLoopBodies, \
    wrapSingleLineComments, \
    yodaConditions, \
    # OPTIONAL
    # acronyms, \ - Difficult to use because it messes with coding keys etc. So a lot of disabling this rule would be necessary
    blankLineAfterSwitchCase, \
    blankLinesBetweenImports, \
    blockComments, \
    # docComments - Cannot enable due to our floating doc comment style
    isEmpty, \ # Rare false positives in situations where a type provides a `count` but not a `isEmpty` property.
    markTypes, \

# Options

--lineaftermarks true # blankLinesAroundMark
--typeblanklines remove # blankLinesAtStartOfScope
--allman false # braces
--condassignment after-property # conditionalAssignment
--elseposition same-line # elseOnSameLine
--guardelse auto # elseOnSameLine
--emptybraces no-space # emptyBraces
--enumnamespaces always # enumNamespaces
--extensionacl on-declarations # extensionAccessControl
--patternlet hoist # hoistPatternLet
--indent 4 # indent
--anonymousforeach ignore # preferForLoop
--self init-only # redundantSelf
--selfrequired "wait,trace,info,presentIfNotDisplayed" # redundentSelf
--redundanttype inferred # redundantType
--importgrouping testable-last # sortImports
--stripunusedargs unnamed-only # unusedArguments
--maxwidth 120 # wrap
--wraparguments before-first # wrapArguments
--wrapparameters before-first # wrapArguments
--wrapcollections before-first # wrapArguments
--callsiteparen balanced # wrapArguments
--funcattributes prev-line # wrapAttributes
--typeattributes prev-line # wrapAttributes
--storedvarattrs same-line # wrapAttributes
--computedvarattrs same-line # wrapAttributes
--complexattrs prev-line # wrapAttributes
