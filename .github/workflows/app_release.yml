on:
  workflow_call:
    inputs:
      fastlane_action:
        required: true
        type: string
    secrets:
      KEYCHAIN_PASSWORD:
        required: true
      APPSTORE_API_KEY_BASE64:
        required: true
      MATCH_PASSWORD:
        required: true
      WIRE_INTERNAL_GITHUB_USER:
        required: true
      WIRE_INTERNAL_GITHUB_TOKEN:
        required: true
      APPCENTER_API_TOKEN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      DD_API_KEY:
        required: true

permissions: 
  checks: write

jobs:
  build_and_release:
    runs-on: ghcr.io/cirruslabs/macos-ventura-xcode:14.3.1
    env:
      KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      MATCH_KEYCHAIN_PASSWORD: ${{ secrets.KEYCHAIN_PASSWORD }}
      APPSTORE_API_KEY_BASE64: ${{ secrets.APPSTORE_API_KEY_BASE64 }}
      MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
      WIRE_INTERNAL_GITHUB_USER: ${{ secrets.WIRE_INTERNAL_GITHUB_USER }}
      WIRE_INTERNAL_GITHUB_TOKEN: ${{ secrets.WIRE_INTERNAL_GITHUB_TOKEN }}
      APPCENTER_API_TOKEN: ${{ secrets.APPCENTER_API_TOKEN }}
      APPCENTER_OWNER_NAME: ${{ secrets.APPCENTER_OWNER_NAME }}
      S3_BUCKET: "z-lohika"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }} 
      DATADOG_API_KEY: ${{ secrets.DD_API_KEY }}
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Restore Carthage Cache
        uses: actions/cache@v3
        id: cache-carthage
        with:
          path: Carthage
          key: ${{ runner.os }}-carthage-${{ hashFiles('Cartfile.resolved') }}
      - name: Bootstrap Carthage if no cache
        if: steps.cache-carthage.outputs.cache-hit != 'true'
        run: carthage bootstrap --platform ios --use-xcframeworks
      - name: Restore Bundler Cache
        uses: actions/cache@v3
        id: cache-bundler
        with:
          path: vendor/bundle
          key: ${{ runner.os }}-bundler-${{ hashFiles('Gemfile.lock') }}
      - name: Run setup
        run: sh ./setup.sh
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
      - name: Trigger build
        run: bundle exec fastlane ${{ inputs.fastlane_action }}
      - name: Save Carthage Cache
        if: steps.cache-carthage.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: Carthage/Build
          key: ${{ steps.cache-carthage.outputs.cache-primary-key }}
      - name: Save Bundler Cache
        if: steps.cache-bundler.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: vendor/bundle
          key: ${{ steps.cache-bundler.outputs.cache-primary-key }}
